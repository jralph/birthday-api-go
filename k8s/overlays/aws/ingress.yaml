apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: birthdays-api
  annotations:
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "5"
    alb.ingress.kubernetes.io/healthcheck-path: /_health
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "2"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/load-balancer-name: birthdays-api
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: "true"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/tags: app.kubernetes.io/app=birthdays-api,app.kubernetes.io/component=ingress
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    # Extra config available:
    #   - Configure usage of an existing WAF (or one could be created in this repo using terraform)
    #   - Configure HTTPS instead of HTTP, and use a AWC ACM certificate
    #   - Provide custom security group configuration to limit access
  labels:
    app.kubernetes.io/name: birthdays-api
    app.kubernetes.io/component: ingress
spec:
  ingressClassName: alb
  rules:
    # The below `host` field should be replaced with a domain that is available within Route53
    # If kubernetes is configured with ExternalDNS, this will automatically be setup as long as the hosted zone exists
    # If not, once deployed, the provided host should be pointed at the newly created alb
    - host: birthdays-api.com
      http:
        paths:
          - backend:
              service:
                name: web-ecom-store
                port:
                  number: 80
            path: /
            pathType: Prefix